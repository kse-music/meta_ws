<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
	    http://www.springframework.org/schema/tx 
	    http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
	    http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-4.3.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.3.xsd">
    
    <context:property-placeholder location="classpath:db.properties" />
    <util:properties id="props" location="classpath:meta_ws.properties"/>
    
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${db.driver}" />
	    <property name="url" value="${db.url}" />
	    <property name="username" value="${db.user}" />
	    <property name="password" value="${db.password}" />
	    <property name="initialSize" value="${db.initialSize}" />
		<property name="maxTotal" value="${db.maxTotal}" />
		<property name="maxIdle" value="${db.maxIdle}" />
		<property name="minIdle" value="${db.minIdle}" />
		<property name="validationQuery" value="${db.validationQuery}" />
		<property name="removeAbandonedTimeout" value="${db.removeAbandonedTimeout}" />
		<property name="removeAbandonedOnBorrow" value="${db.removeAbandonedOnBorrow}" />
		<property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}" />
	</bean>
	
	<!-- 所有依赖注入均采用基于注解的方式来进行 -->
	<context:component-scan base-package="com.hiekn.meta" />

	<!-- MyBatis的sqlSession装配 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:com/hiekn/meta/dao/*Mapper.xml" />
	</bean>
	
    <!--动态代理实现 不用写dao的实现 -->  
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.hiekn.meta.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />  
	</bean>
	
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" p:dataSource-ref="dataSource" />
	
	<!-- 开启注解事务 -->
	<tx:annotation-driven transaction-manager="txManager" />
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="modify*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="remove*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="batch*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="txServiceMethods"	expression="execution(* com.hiekn.meta.service.impl.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txServiceMethods" />
	</aop:config>
	
	<aop:aspectj-autoproxy />
	
</beans>