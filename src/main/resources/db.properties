db.driver=com.mysql.jdbc.Driver
db.url=jdbc:mysql://192.168.1.138:3306/mydb?characterEncoding=utf8&amp;autoReconnect=true&amp;failOverReadOnly=false&amp;&useSSL=false
db.user=root
db.password=root@hiekn
#连接池启动时的初始值 
db.initialSize=1
#连接池的最大值
db.maxTotal=50
#最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止
db.maxIdle=20
#最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请
db.minIdle=10
#给出一条简单的sql语句进行验证
db.validationQuery=select 1
#在取出连接时进行有效验证
db.removeAbandonedTimeout=300
#超过removeAbandonedTimeout没有被使用过，是否移除
db.removeAbandonedOnBorrow=true
#运行判断连接超时任务的时间间隔，单位为毫秒，默认为-1，即不执行任务。
db.timeBetweenEvictionRunsMillis=3600000
#连接的超时时间，默认为半小时。
db.minEvictableIdleTimeMillis=3600000

es_host=192.168.1.138:9300
es_name=docker-es

mongo_host=192.168.1.138:27017

redis_ip=192.168.1.138
redis_port=6379
#最大连接数, 默认8个
redis_max_total=50
#最小空闲连接数, 默认0
redis_min_idle=0
#最大空闲连接数, 默认8个
redis_max_idle=8
#在获取连接的时候检查有效性, 默认false
redis_test_on_borrow=true
#获取连接时的最大等待毫秒数(如果设置为阻塞时BlockWhenExhausted),如果超时就抛异常, 小于零:阻塞不确定的时间,  默认-1
redis_max_wait_millis=-1
#读取超时,默认2000
redis_timeout=3000
